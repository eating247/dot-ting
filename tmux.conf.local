# new prefix
set-option -g prefix `

# when I actually need to type backticks
bind ` send-prefix

# prefix-r for dynamic sourcing
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# WINDOWS
# new window 
bind c new-window -c "#{pane_current_path}"
# start numbering at 1
set -g base-index 1
# renumber windows as they're created/destroyed
set -g renumber-windows on
# break pane out to new window
bind-key b break-pane -d

# status bar
set-option -g status-left-length 50
set-option -g status-right " #(date '+%a, %b %d - %I:%M') "
set-option -g status-left " [#S] "
set -g status-bg '#e29587'
set -g status-fg '#ffffff'

# PANES
# more intuitive split pane 
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
# fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
